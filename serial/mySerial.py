#####
# Author: TheUnkn0wn1
# File: serialTest.py
# Function: Establish and handle serial comms between Pi and RoboClaw
###

'''Import dependant libs'''
import platform # for version check
import serial #Common pySerial library
import zlib #for CRC

# # Version test # #

def versionTest():
	"""Ensures the interpreter is python3"""
	strVersion = platform.python_version() #define var strVersion for handling
	if int(strVersion[0])!=3: #if we are not running on the python 3.x.x interpreter
		raise ValueError("This program targets python3, please ensure you have the right path set!")
#let's ensure script is executed with python3
versionTest()


#import RPi.GPIO as gpio #renaming because I hate caps...

class mySerial():
	"""class that handles serial communication with the RoboClaw"""
	port = "/dev/ttyAMA0" #the comport on the Pi itself
	tx = 8 	#Red wire	#gpio pins in use here, might be useful later
	rx = 10	#purple		#gpio pins in use here, might be useful later
	
	def __init__(self, arg):	#tbh this stuff was auto-generated by my editor...
		super(mySerial, self).__init__()	#tbh this stuff was auto-generated by my editor...
		self.arg = arg	#tbh this stuff was auto-generated by my editor...
	def prepareSerial(self):
		"""Prepare the serial connection for use, returns serial object"""
		try:
			ser = serial.Serial(self.port,38400,timeout=5) #creates serial object 'ser' for usage
		except Exception as error: #because i want to see any exception that is thrown right now
			print("mySerial::prepareSerial\t Encountered an error creating serial object!")
			#print(type(error))	#redundant
			print(error)
			ser.open()
